{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ResourceList.js","webpack:///./pages/index.js","webpack:///external \"@shopify/app-bridge-react\"","webpack:///external \"@shopify/app-bridge/actions\"","webpack:///external \"@shopify/polaris\"","webpack:///external \"graphql-tag\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"store-js\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport { \r\n    Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, \r\n} from '@shopify/polaris'\r\nimport store from 'store-js'\r\nimport { Redirect } from '@shopify/app-bridge/actions'\r\nimport { Context } from '@shopify/app-bridge-react'\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!) {\r\n        nodes(ids: $ids) {\r\n            ... on Product {\r\n                title\r\n                handle\r\n                descriptionHtml\r\n                id\r\n                images(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            originalSrc\r\n                            altText\r\n                        }\r\n                    }\r\n                }\r\n                variants(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            price\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n\r\n    static contextType = Context\r\n\r\n    render() {\r\n        const app = this.context\r\n        const redirectToProduct = () => {\r\n            const redirect = Redirect.create(app)\r\n            redirect.dispatch(\r\n                Redirect.Action.APP,\r\n                '/edit-products',\r\n            )\r\n        }\r\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString()\r\n        return (\r\n            <Query query={GET_PRODUCTS_BY_ID} variables={{\r\n                ids: store.get('ids')\r\n            }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) return <div>Loading...</div>\r\n                    if (error) return <div>{error.message}</div>\r\n                    console.log(data)\r\n                    return (\r\n                        <Card>\r\n                            <ResourceList\r\n                                showHeader\r\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                                items={data.nodes}\r\n                                renderItem={item => {\r\n                                const media = (\r\n                                    <Thumbnail\r\n                                        source={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.originalSrc\r\n                                            : ''\r\n                                        }\r\n                                        alt={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.altText\r\n                                            : ''\r\n                                        }\r\n                                    />\r\n                                )\r\n                                const price = item.variants.edges[0].node.price;\r\n                                return (\r\n                                    <ResourceList.Item\r\n                                        id={item.id}\r\n                                        media={media}\r\n                                        accessibilityLabel={`View details for ${item.title}`}\r\n                                        onClick={() => {\r\n                                            store.set('item', item)\r\n                                            redirectToProduct()\r\n                                        }}\r\n                                    >\r\n                                    <Stack>\r\n                                        <Stack.Item fill>\r\n                                            <h3>\r\n                                                <TextStyle variation=\"strong\">\r\n                                                    {item.title}\r\n                                                </TextStyle>\r\n                                            </h3>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>P{price}</p>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>Expires on {twoWeeksFromNow} </p>\r\n                                        </Stack.Item>\r\n                                    </Stack>\r\n                                    </ResourceList.Item>\r\n                                )\r\n                                }}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceListWithProducts","import { EmptyState, Layout, Page } from '@shopify/polaris'\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react'\r\nimport store from 'store-js'\r\nimport ResourceListWithProducts from '../components/ResourceList'\r\n\r\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg'\r\n\r\nclass Index extends React.Component {\r\n    state = { open: false }\r\n    render() {\r\n        const emptyState = !store.get('ids');\r\n        return (\r\n        <Page>\r\n            <TitleBar\r\n                primaryAction={{\r\n                    content: 'Select products',\r\n                    onAction: () => this.setState({ open: true }),\r\n                }}\r\n            />\r\n            <ResourcePicker\r\n                resourceType=\"Product\"\r\n                showVariants={false}\r\n                open={this.state.open}\r\n                onSelection={(resources) => this.handleSelection(resources)}\r\n                onCancel={() => this.setState({ open: false })}\r\n            />\r\n            {emptyState ? (\r\n                <Layout>\r\n                    <EmptyState\r\n                        heading=\"Discount your products temporarily\"\r\n                        action={{\r\n                            content: 'Select products',\r\n                            onAction: () => this.setState({ open: true }),\r\n                        }}\r\n                        image={img}\r\n                        >\r\n                            <p>Select products to change their price temporarily.</p>\r\n                    </EmptyState>\r\n                </Layout>\r\n            ) : (\r\n                <ResourceListWithProducts />\r\n            )}\r\n        </Page>\r\n        )\r\n    }\r\n    handleSelection = (resources) => {\r\n        const idsFromResources = resources.selection.map((product) => product.id )\r\n        this.setState({ open: false })\r\n        store.set('ids', idsFromResources)\r\n    }\r\n}\r\n\r\nexport default Index","module.exports = require(\"@shopify/app-bridge-react\");","module.exports = require(\"@shopify/app-bridge/actions\");","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"store-js\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAOA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AA4BA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AANA;AACA;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AAAA;AAcA;AA/CA;AAmDA;AAGA;AACA;AA/EA;AACA;AADA;AACA;AAgFA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AACA;AAAA;AAAA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AANA;AAgBA;AACA;AAtCA;AACA;AA4CA;;;;;;;;;;;;;;;;;;;;;;;ACpDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}