{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n    query getProducts($ids: [ID!]!) {\n        nodes(ids: $ids) {\n            ... on Product {\n                title\n                handle\n                descriptionHtml\n                id\n                images(first: 1) {\n                    edges {\n                        node {\n                            originalSrc\n                            altText\n                        }\n                    }\n                }\n                variants(first: 1) {\n                    edges {\n                        node {\n                            price\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading...\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = __jsx(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.variants.edges[0].node.price;\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n        }\n      }));\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/Acer/Documents/ziphub-node-react/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACIC,IADJ,EAEIC,YAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,MAAMS,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AACnDC,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,WACI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAER,kBAAd;AAAkC,MAAA,SAAS,EAAE;AACzCS,QAAAA,GAAG,EAAEV,KAAK,CAACW,GAAN,CAAU,KAAV;AADoC;AAA7C,OAGK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA8B;AAC3B,UAAID,OAAJ,EAAa,OAAO,gCAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,YAAY,EAAE;AAAEM,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SAFlB;AAGI,QAAA,KAAK,EAAEP,IAAI,CAACQ,KAHhB;AAII,QAAA,UAAU,EAAEC,IAAI,IAAI;AACpB,gBAAMC,KAAK,GACP,MAAC,SAAD;AACI,YAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD5B,GAEE,EAJV;AAMI,YAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD5B,GAEE;AATV,YADJ;;AAcA,gBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,iBACI,MAAC,YAAD,CAAc,IAAd;AACI,YAAA,EAAE,EAAEP,IAAI,CAACS,EADb;AAEI,YAAA,KAAK,EAAER,KAFX;AAGI,YAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM;AAHvD,aAKA,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,YAAA,IAAI;AAAhB,aACI,kBACI,MAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB,aACKV,IAAI,CAACU,KADV,CADJ,CADJ,CADJ,EAQI,MAAC,KAAD,CAAO,IAAP,QACI,sBAAKH,KAAL,CADJ,CARJ,EAWI,MAAC,KAAD,CAAO,IAAP,QACI,gCAAetB,eAAf,MADJ,CAXJ,CALA,CADJ;AAuBC;AA3CL,QADJ,CADJ;AAiDH,KAxDL,CADJ;AA4DH;;AA/DkD;;AAkEvD,eAAeJ,wBAAf","sourcesContent":["import gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport { \r\n    Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, \r\n} from '@shopify/polaris'\r\nimport store from 'store-js'\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!) {\r\n        nodes(ids: $ids) {\r\n            ... on Product {\r\n                title\r\n                handle\r\n                descriptionHtml\r\n                id\r\n                images(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            originalSrc\r\n                            altText\r\n                        }\r\n                    }\r\n                }\r\n                variants(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            price\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n    render() {\r\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString()\r\n        return (\r\n            <Query query={GET_PRODUCTS_BY_ID} variables={{\r\n                ids: store.get('ids')\r\n            }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) return <div>Loading...</div>\r\n                    if (error) return <div>{error.message}</div>\r\n                    console.log(data)\r\n                    return (\r\n                        <Card>\r\n                            <ResourceList\r\n                                showHeader\r\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                                items={data.nodes}\r\n                                renderItem={item => {\r\n                                const media = (\r\n                                    <Thumbnail\r\n                                        source={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.originalSrc\r\n                                            : ''\r\n                                        }\r\n                                        alt={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.altText\r\n                                            : ''\r\n                                        }\r\n                                    />\r\n                                )\r\n                                const price = item.variants.edges[0].node.price;\r\n                                return (\r\n                                    <ResourceList.Item\r\n                                        id={item.id}\r\n                                        media={media}\r\n                                        accessibilityLabel={`View details for ${item.title}`}\r\n                                    >\r\n                                    <Stack>\r\n                                        <Stack.Item fill>\r\n                                            <h3>\r\n                                                <TextStyle variation=\"strong\">\r\n                                                    {item.title}\r\n                                                </TextStyle>\r\n                                            </h3>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>${price}</p>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>Expires on {twoWeeksFromNow} </p>\r\n                                        </Stack.Item>\r\n                                    </Stack>\r\n                                    </ResourceList.Item>\r\n                                )\r\n                                }}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceListWithProducts"]},"metadata":{},"sourceType":"module"}