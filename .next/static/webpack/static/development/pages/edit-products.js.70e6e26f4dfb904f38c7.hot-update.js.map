{"version":3,"file":"static/webpack/static\\development\\pages\\edit-products.js.70e6e26f4dfb904f38c7.hot-update.js","sources":["webpack:///./pages/edit-products.js"],"sourcesContent":["import {\r\n    Banner,\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Frame,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField,\r\n    Toast\r\n} from '@shopify/polaris'\r\nimport store from 'store-js'\r\nimport gql from 'graphql-tag'\r\nimport { Mutation } from 'react-apollo'\r\n \r\nconst UPDATE_PRICE = gql`\r\n    mutation productVariantUpdate($input: ProductVariantInput!) {\r\n        productVariantUpdate(input: $input) {\r\n            product {\r\n                title\r\n            }\r\n            productVariant {\r\n                id\r\n                price\r\n            }\r\n        }\r\n    }\r\n`\r\n  \r\nclass EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: '',\r\n      showToast: false,\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.setState({ discount: this.itemToBeConsumed() })\r\n    }\r\n  \r\n    render() {\r\n        const { name, price, discount, variantId } = this.state\r\n        return (\r\n            <Mutation\r\n                mutation = {UPDATE_PRICE}\r\n            >\r\n                {(handleSubmit, {error, data}) => {\r\n                    const showError = error && (\r\n                        <Banner status=\"critical\">{error.message}</Banner>\r\n                    )\r\n                    const showToast = data && data.productVariantUpdate && (\r\n                        <Toast\r\n                            content=\"Successfully Updated\"\r\n                            onDismiss={() => this.setState({ showToast: false })}\r\n                        />\r\n                    )\r\n                    return (\r\n                        <Frame>\r\n                            <Page>\r\n                                <Layout>\r\n                                    {showToast}\r\n                                    <Layout.Section>\r\n                                        {showError}\r\n                                    </Layout.Section>\r\n                                    <Layout.Section>\r\n                                        <DisplayText size=\"large\">{name}</DisplayText>\r\n                                        <Form>\r\n                                            <Card sectioned>\r\n                                            <FormLayout>\r\n                                                <FormLayout.Group>\r\n                                                    <TextField\r\n                                                        prefix=\"P\"\r\n                                                        value={price}\r\n                                                        disabled={true}\r\n                                                        label=\"Original price\"\r\n                                                        type=\"price\"\r\n                                                        />\r\n                                                    <TextField\r\n                                                        prefix=\"P\"\r\n                                                        value={discount}\r\n                                                        onChange={this.handleChange('discount')}\r\n                                                        label=\"Discounted price\"\r\n                                                        type=\"discount\"\r\n                                                        />\r\n                                                </FormLayout.Group>\r\n                                            <p>\r\n                                                This sale price will expire in two weeks\r\n                                            </p>\r\n                                            </FormLayout>\r\n                                            </Card>\r\n                                            <PageActions\r\n                                                primaryAction={[\r\n                                                    {\r\n                                                        content: 'Save',\r\n                                                        onAction: () => {\r\n                                                            const ProductVariantInput = {\r\n                                                                id: variantId,\r\n                                                                price: discount,\r\n                                                            }\r\n                                                            handleSubmit({\r\n                                                                variables: { input: ProductVariantInput },\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                ]}\r\n                                                secondaryActions={[\r\n                                                    {\r\n                                                        content: 'Remove discount'\r\n                                                    }\r\n                                                ]}\r\n                                                />\r\n                                        </Form>\r\n                                    </Layout.Section>\r\n                                </Layout>\r\n                            </Page>\r\n                        </Frame>\r\n                    )\r\n                }}\r\n            </Mutation>\r\n        )\r\n    }\r\n  \r\n    handleChange = (field) => {\r\n        return (value) => this.setState({ [field]: value })\r\n    }\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item')\r\n        const price = item.variants.edges[0].node.price\r\n        const variantId = item.variants.edges[0].node.id\r\n        const discounter = price * 0.1\r\n        this.setState({ price, variantId })\r\n        return (price - discounter).toFixed(2)\r\n    }\r\n}\r\n\r\nexport default EditProduct"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAaA;AACA;AACA;AAEA;AACA;AAaA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AA4FA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAlGA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAIA;AASA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AAVA;AAaA;AAEA;AADA;AAhBA;AA2BA;AAGA;;;;AA5FA;AACA;AA2GA;;;;A","sourceRoot":""}