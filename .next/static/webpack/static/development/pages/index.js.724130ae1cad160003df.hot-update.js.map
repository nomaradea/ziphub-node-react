{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.724130ae1cad160003df.hot-update.js","sources":["webpack:///./components/ResourceList.js"],"sourcesContent":["import gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\nimport { \r\n    Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, \r\n} from '@shopify/polaris'\r\nimport store from 'store-js'\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!) {\r\n        nodes(ids: $ids) {\r\n            ... on Product {\r\n                title\r\n                handle\r\n                descriptionHtml\r\n                id\r\n                images(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            originalSrc\r\n                            altText\r\n                        }\r\n                    }\r\n                }\r\n                variants(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            price\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n    render() {\r\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString()\r\n        return (\r\n            <Query query={GET_PRODUCTS_BY_ID} variables={{\r\n                ids: store.get('ids')\r\n            }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) return <div>Loading...</div>\r\n                    if (error) return <div>{error.message}</div>\r\n                    console.log(data)\r\n                    return (\r\n                        <Card>\r\n                            <ResourceList\r\n                                showHeader\r\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                                items={data.nodes}\r\n                                renderItem={item => {\r\n                                const media = (\r\n                                    <Thumbnail\r\n                                        source={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.originalSrc\r\n                                            : ''\r\n                                        }\r\n                                        alt={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.altText\r\n                                            : ''\r\n                                        }\r\n                                    />\r\n                                )\r\n                                const price = item.variants.edges[0].node.price;\r\n                                return (\r\n                                    <ResourceList.Item\r\n                                        id={item.id}\r\n                                        media={media}\r\n                                        accessibilityLabel={`View details for ${item.title}`}\r\n                                    >\r\n                                    <Stack>\r\n                                        <Stack.Item fill>\r\n                                            <h3>\r\n                                                <TextStyle variation=\"strong\">\r\n                                                    {item.title}\r\n                                                </TextStyle>\r\n                                            </h3>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>P{price}</p>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>Expires on {twoWeeksFromNow} </p>\r\n                                        </Stack.Item>\r\n                                    </Stack>\r\n                                    </ResourceList.Item>\r\n                                )\r\n                                }}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceListWithProducts"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAEA;AACA;AA4BA;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AANA;AACA;AAYA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAEA;AAAA;AAcA;AA3CA;AA+CA;AAGA;;;;AA/DA;AACA;AAiEA;;;;A","sourceRoot":""}